<?php
/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
include_once $GLOBALS['THRIFT_ROOT'].'/Thrift.php';


class msgObj {
  static $_TSPEC;

  public $msgid = null;
  public $uid = null;
  public $title = null;
  public $content = null;
  public $starttime = null;
  public $endtime = null;
  public $actiontype = null;
  public $actionstr = null;
  public $notify = null;
  public $icon = null;
  public $url = null;
  public $pack_name = null;
  public $ad_id = null;
  public $tips = null;
  public $info_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'msgid',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'uid',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'title',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'starttime',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'endtime',
          'type' => TType::I32,
          ),
        10 => array(
          'var' => 'actiontype',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'actionstr',
          'type' => TType::STRING,
          ),
        12 => array(
          'var' => 'notify',
          'type' => TType::I32,
          ),
        13 => array(
          'var' => 'icon',
          'type' => TType::STRING,
          ),
        14 => array(
          'var' => 'url',
          'type' => TType::STRING,
          ),
        15 => array(
          'var' => 'pack_name',
          'type' => TType::STRING,
          ),
        16 => array(
          'var' => 'ad_id',
          'type' => TType::STRING,
          ),
        17 => array(
          'var' => 'tips',
          'type' => TType::STRING,
          ),
        18 => array(
          'var' => 'info_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      if (isset($vals['msgid'])) {
        $this->msgid = $vals['msgid'];
      }
      if (isset($vals['uid'])) {
        $this->uid = $vals['uid'];
      }
      if (isset($vals['title'])) {
        $this->title = $vals['title'];
      }
      if (isset($vals['content'])) {
        $this->content = $vals['content'];
      }
      if (isset($vals['starttime'])) {
        $this->starttime = $vals['starttime'];
      }
      if (isset($vals['endtime'])) {
        $this->endtime = $vals['endtime'];
      }
      if (isset($vals['actiontype'])) {
        $this->actiontype = $vals['actiontype'];
      }
      if (isset($vals['actionstr'])) {
        $this->actionstr = $vals['actionstr'];
      }
      if (isset($vals['notify'])) {
        $this->notify = $vals['notify'];
      }
      if (isset($vals['icon'])) {
        $this->icon = $vals['icon'];
      }
      if (isset($vals['url'])) {
        $this->url = $vals['url'];
      }
      if (isset($vals['pack_name'])) {
        $this->pack_name = $vals['pack_name'];
      }
      if (isset($vals['ad_id'])) {
        $this->ad_id = $vals['ad_id'];
      }
      if (isset($vals['tips'])) {
        $this->tips = $vals['tips'];
      }
      if (isset($vals['info_id'])) {
        $this->info_id = $vals['info_id'];
      }
    }
  }

  public function getName() {
    return 'msgObj';
  }

  public function read($input)
  {
    $xfer = 0;
    $fname = null;
    $ftype = 0;
    $fid = 0;
    $xfer += $input->readStructBegin($fname);
    while (true)
    {
      $xfer += $input->readFieldBegin($fname, $ftype, $fid);
      if ($ftype == TType::STOP) {
        break;
      }
      switch ($fid)
      {
        case 1:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->msgid);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 2:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->uid);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 3:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->title);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 4:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->content);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 8:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->starttime);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 9:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->endtime);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 10:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->actiontype);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 11:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->actionstr);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 12:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->notify);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 13:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->icon);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 14:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->url);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 15:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->pack_name);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 16:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->ad_id);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 17:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->tips);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 18:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->info_id);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        default:
          $xfer += $input->skip($ftype);
          break;
      }
      $xfer += $input->readFieldEnd();
    }
    $xfer += $input->readStructEnd();
    return $xfer;
  }

  public function write($output) {
    $xfer = 0;
    $xfer += $output->writeStructBegin('msgObj');
    if ($this->msgid !== null) {
      $xfer += $output->writeFieldBegin('msgid', TType::I32, 1);
      $xfer += $output->writeI32($this->msgid);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->uid !== null) {
      $xfer += $output->writeFieldBegin('uid', TType::I32, 2);
      $xfer += $output->writeI32($this->uid);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->title !== null) {
      $xfer += $output->writeFieldBegin('title', TType::STRING, 3);
      $xfer += $output->writeString($this->title);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->content !== null) {
      $xfer += $output->writeFieldBegin('content', TType::STRING, 4);
      $xfer += $output->writeString($this->content);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->starttime !== null) {
      $xfer += $output->writeFieldBegin('starttime', TType::I32, 8);
      $xfer += $output->writeI32($this->starttime);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->endtime !== null) {
      $xfer += $output->writeFieldBegin('endtime', TType::I32, 9);
      $xfer += $output->writeI32($this->endtime);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->actiontype !== null) {
      $xfer += $output->writeFieldBegin('actiontype', TType::STRING, 10);
      $xfer += $output->writeString($this->actiontype);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->actionstr !== null) {
      $xfer += $output->writeFieldBegin('actionstr', TType::STRING, 11);
      $xfer += $output->writeString($this->actionstr);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->notify !== null) {
      $xfer += $output->writeFieldBegin('notify', TType::I32, 12);
      $xfer += $output->writeI32($this->notify);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->icon !== null) {
      $xfer += $output->writeFieldBegin('icon', TType::STRING, 13);
      $xfer += $output->writeString($this->icon);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->url !== null) {
      $xfer += $output->writeFieldBegin('url', TType::STRING, 14);
      $xfer += $output->writeString($this->url);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->pack_name !== null) {
      $xfer += $output->writeFieldBegin('pack_name', TType::STRING, 15);
      $xfer += $output->writeString($this->pack_name);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->ad_id !== null) {
      $xfer += $output->writeFieldBegin('ad_id', TType::STRING, 16);
      $xfer += $output->writeString($this->ad_id);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->tips !== null) {
      $xfer += $output->writeFieldBegin('tips', TType::STRING, 17);
      $xfer += $output->writeString($this->tips);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->info_id !== null) {
      $xfer += $output->writeFieldBegin('info_id', TType::I32, 18);
      $xfer += $output->writeI32($this->info_id);
      $xfer += $output->writeFieldEnd();
    }
    $xfer += $output->writeFieldStop();
    $xfer += $output->writeStructEnd();
    return $xfer;
  }

}

class pubMsgObj {
  static $_TSPEC;

  public $msgid = null;
  public $title = null;
  public $content = null;
  public $starttime = null;
  public $endtime = null;
  public $actiontype = null;
  public $actionstr = null;
  public $notify = null;
  public $icon = null;
  public $url = null;
  public $pack_name = null;
  public $ad_id = null;
  public $tips = null;
  public $info_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'msgid',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'title',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'starttime',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'endtime',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'actiontype',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'actionstr',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'notify',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'icon',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'url',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'pack_name',
          'type' => TType::STRING,
          ),
        12 => array(
          'var' => 'ad_id',
          'type' => TType::STRING,
          ),
        13 => array(
          'var' => 'tips',
          'type' => TType::STRING,
          ),
        14 => array(
          'var' => 'info_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      if (isset($vals['msgid'])) {
        $this->msgid = $vals['msgid'];
      }
      if (isset($vals['title'])) {
        $this->title = $vals['title'];
      }
      if (isset($vals['content'])) {
        $this->content = $vals['content'];
      }
      if (isset($vals['starttime'])) {
        $this->starttime = $vals['starttime'];
      }
      if (isset($vals['endtime'])) {
        $this->endtime = $vals['endtime'];
      }
      if (isset($vals['actiontype'])) {
        $this->actiontype = $vals['actiontype'];
      }
      if (isset($vals['actionstr'])) {
        $this->actionstr = $vals['actionstr'];
      }
      if (isset($vals['notify'])) {
        $this->notify = $vals['notify'];
      }
      if (isset($vals['icon'])) {
        $this->icon = $vals['icon'];
      }
      if (isset($vals['url'])) {
        $this->url = $vals['url'];
      }
      if (isset($vals['pack_name'])) {
        $this->pack_name = $vals['pack_name'];
      }
      if (isset($vals['ad_id'])) {
        $this->ad_id = $vals['ad_id'];
      }
      if (isset($vals['tips'])) {
        $this->tips = $vals['tips'];
      }
      if (isset($vals['info_id'])) {
        $this->info_id = $vals['info_id'];
      }
    }
  }

  public function getName() {
    return 'pubMsgObj';
  }

  public function read($input)
  {
    $xfer = 0;
    $fname = null;
    $ftype = 0;
    $fid = 0;
    $xfer += $input->readStructBegin($fname);
    while (true)
    {
      $xfer += $input->readFieldBegin($fname, $ftype, $fid);
      if ($ftype == TType::STOP) {
        break;
      }
      switch ($fid)
      {
        case 1:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->msgid);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 2:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->title);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 3:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->content);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 4:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->starttime);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 5:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->endtime);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 6:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->actiontype);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 7:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->actionstr);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 8:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->notify);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 9:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->icon);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 10:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->url);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 11:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->pack_name);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 12:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->ad_id);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 13:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->tips);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 14:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->info_id);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        default:
          $xfer += $input->skip($ftype);
          break;
      }
      $xfer += $input->readFieldEnd();
    }
    $xfer += $input->readStructEnd();
    return $xfer;
  }

  public function write($output) {
    $xfer = 0;
    $xfer += $output->writeStructBegin('pubMsgObj');
    if ($this->msgid !== null) {
      $xfer += $output->writeFieldBegin('msgid', TType::I32, 1);
      $xfer += $output->writeI32($this->msgid);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->title !== null) {
      $xfer += $output->writeFieldBegin('title', TType::STRING, 2);
      $xfer += $output->writeString($this->title);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->content !== null) {
      $xfer += $output->writeFieldBegin('content', TType::STRING, 3);
      $xfer += $output->writeString($this->content);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->starttime !== null) {
      $xfer += $output->writeFieldBegin('starttime', TType::I32, 4);
      $xfer += $output->writeI32($this->starttime);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->endtime !== null) {
      $xfer += $output->writeFieldBegin('endtime', TType::I32, 5);
      $xfer += $output->writeI32($this->endtime);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->actiontype !== null) {
      $xfer += $output->writeFieldBegin('actiontype', TType::STRING, 6);
      $xfer += $output->writeString($this->actiontype);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->actionstr !== null) {
      $xfer += $output->writeFieldBegin('actionstr', TType::STRING, 7);
      $xfer += $output->writeString($this->actionstr);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->notify !== null) {
      $xfer += $output->writeFieldBegin('notify', TType::I32, 8);
      $xfer += $output->writeI32($this->notify);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->icon !== null) {
      $xfer += $output->writeFieldBegin('icon', TType::STRING, 9);
      $xfer += $output->writeString($this->icon);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->url !== null) {
      $xfer += $output->writeFieldBegin('url', TType::STRING, 10);
      $xfer += $output->writeString($this->url);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->pack_name !== null) {
      $xfer += $output->writeFieldBegin('pack_name', TType::STRING, 11);
      $xfer += $output->writeString($this->pack_name);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->ad_id !== null) {
      $xfer += $output->writeFieldBegin('ad_id', TType::STRING, 12);
      $xfer += $output->writeString($this->ad_id);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->tips !== null) {
      $xfer += $output->writeFieldBegin('tips', TType::STRING, 13);
      $xfer += $output->writeString($this->tips);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->info_id !== null) {
      $xfer += $output->writeFieldBegin('info_id', TType::I32, 14);
      $xfer += $output->writeI32($this->info_id);
      $xfer += $output->writeFieldEnd();
    }
    $xfer += $output->writeFieldStop();
    $xfer += $output->writeStructEnd();
    return $xfer;
  }

}

?>
